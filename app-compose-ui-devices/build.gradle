plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'cn.geekcity.plugin.ui.devices'
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    lintOptions {
        abortOnError true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':app-compose-ui-commcon')
    implementation project(':HomeManager')

    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$androidx_lifecycle_viewmodel_compose_version"
    implementation "androidx.activity:activity-compose:$androidx_activity_compose_version"
    implementation "androidx.compose.ui:ui:$androidx_compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$androidx_compose_ui_version"
    implementation "androidx.compose.material:material:$androidx_compose_material_version"
    implementation "androidx.compose.foundation:foundation:$androidx_compose_foundation_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$androidx_compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$androidx_compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$androidx_compose_ui_version"
}

task deleteDex(type: Delete) {
    delete "../app/src/main/assets/compose_ui_devices.dex"
}

// 从生成的 apk 文件中提取出 dex 文件
task makeDex(type: Copy) {
//    def apkFile = file('build/outputs/apk/release/app-compose-ui-plugin-devices-release-unsigned.apk')
//    FileTree fileTree = zipTree(apkFile)
//    from(fileTree)
//    into('../app/src/main/assets/')
//    include('classes.dex')
//    rename('classes.dex', 'compose_ui_devices.dex')
}

makeDex.dependsOn(deleteDex, build)

// 解压aar, 得到classes.jar
task unzipAAR() {

//    from( zipTree(file("test.zip")).matching { include "**/result1.jar"  } )
//    from(zipTree(file('build/outputs/aar/app-compose-ui-devices-release.aar')))
//    into "$buildDir/out"
//    includeEmptyDirs = false

//    def zipFile = file('build/outputs/aar/app-compose-ui-devices-release.aar')
//    def outputDir = file("${buildDir}/out")
//
//    from zipTree(zipFile)
//    into outputDir

//    from {
////        zipTree("$buildDir/outputs/aar/app-compose-ui-devices-release.aar").matching { include '**/result1.jar' }.singleFile
//        zipTree("$buildDir/outputs/aar/app-compose-ui-devices-release.aar")
//    }
//    into "${buildDir}/out"

//    def aarFile = file('build/outputs/aar/app-compose-ui-devices-release.aar')
//    FileTree fileTree = zipTree(aarFile)
//    from(fileTree)
//    into('build/outputs/aar/')
//    include('classes.jar')
//    rename('classes.dex', 'compose_ui_devices.dex')
}

unzipAAR.dependsOn(build)
